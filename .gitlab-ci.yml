image: docker:latest
stages:
  - test
  - build
  - restart
  - backup
  - deploy

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  
addispay_dev:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main
deploy:
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_RELEASE_IMAGE
    - docker container rm -f addispay_dev || true
    - docker run -d -p 4050:80 --name addispay_dev --restart unless-stopped $CONTAINER_RELEASE_IMAGE
    - docker exec addispay_dev sh -c "composer install --optimize-autoloader --no-dev"  
    - docker exec addispay_dev sh -c "php artisan config:cache"  
    - docker exec addispay_dev sh -c "php artisan route:cache"  
    - docker exec addispay_dev sh -c "php artisan view:cache"  
    - docker exec addispay_dev sh -c "npm install"  
    - docker exec addispay_dev sh -c "npm run production"
  environment:
    name: prod
    url: https://dev.addispay.et/api-docs 


# addispay-restart-deployment:
#   stage: restart
#   script:
#     - apk add --no-cache curl
#     - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
#     - chmod +x kubectl
#     - mv kubectl /usr/local/bin/
#     - export PATH=$PATH:/usr/local/bin/
#     - echo "$QA_KUBECONFIG" > kubeconfig.yml
#     - export KUBECONFIG=$(pwd)/kubeconfig.yml
#     - kubectl --token $QA_SA_TOKEN rollout restart deployment addispay-deployment -n addis

addispay-backup-image:
  stage: backup
  tags:
    - prod
  variables: 
    CONTAINER_RELEASE_IMAGE: $BACKUP_REGISTRY/$CI_PROJECT_PATH/addispay:latest
  script:
    - docker login -u $BACKUP_REGISTRY_USER -p $BACKUP_REGISTRY_PASSWORD $BACKUP_REGISTRY
    - docker build -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - main

